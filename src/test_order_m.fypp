#:include 'forum.inc'

module test_order_m

  ! Uses

  use kinds_m
  use order_m

  use ISO_FORTRAN_ENV

  ! No implicit typing

  implicit none

  ! Access specifiers

  private

  public :: test


contains

  subroutine test ()

    call test_locate_()

  end subroutine test

  !****

  subroutine test_locate_()

    real(R8), allocatable :: x(:)
    real(R8)              :: x_loc
    integer               :: i_loc
    integer               :: i_loc_chk

    integer :: i

    ! Iterate over test instances

    print *,'locate'

    do i = 1, 5
       call locate_arrange_(i)
       call locate_act_(i)
       call locate_assert_(i)
    end do

    ! Finish

    return

  contains

    subroutine locate_arrange_(i)

      integer, intent(in) :: i

      integer :: k

      x = [(k,k=1,10)]

      select case (i)
      case (1)
         x_loc = 6._R8
         i_loc_chk = 6
      case (2)
         x_loc = 4.5_R8
         i_loc_chk = 4
      case (3)
         x_loc = 10._R8
         i_loc_chk = 9
      case (4)
         x_loc = 0.99_R8
         i_loc_chk = 0
      case (5)
         x_loc = 10.01_R8
         i_loc_chk = 10
      case default
         @:ABORT(Invalid instance)
      end select

      ! Finish

      return

    end subroutine locate_arrange_
       
    !****

    subroutine locate_act_(i)

      integer, intent(in) :: i

      call locate(x, x_loc, i_loc)

      ! Finish

      return

    end subroutine locate_act_

    !****

    subroutine locate_assert_(i)

      integer, intent(in) :: i

      if (i_loc == i_loc_chk) then
         print *, '  PASS', i
      else
         print *, '  FAIL', i, i_loc, i_loc_chk
      end if

      ! Finish

      return

    end subroutine locate_assert_

  end subroutine test_locate_

end module test_order_m
