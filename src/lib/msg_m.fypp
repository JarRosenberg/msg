! Module  : msg_m
! Purpose : Fortran public interface for MSG
!
! Copyright 2021-2022 Rich Townsend & The MSG Team
!
! This file is part of MSG. MSG is free software: you can redistribute
! it and/or modify it under the terms of the GNU General Public
! License as published by the Free Software Foundation, version 3.
!
! MSG is distributed in the hope that it will be useful, but WITHOUT
! ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
! or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
! License for more details.
!
! You should have received a copy of the GNU General Public License
! along with this program.  If not, see <http://www.gnu.org/licenses/>.

#:include 'forum.inc'

module msg_m

   ! Uses

   use forum_m

   use axis_m
   use limb_m
   use ngrid_m
   use passband_m
   use photgrid_m
   use photint_m
   use specgrid_m
   use specint_m
   use stat_m

   use ISO_FORTRAN_ENV

   ! No implicit typing

   implicit none

   ! Interfaces

   interface specgrid_t
      module procedure specgrid_t_
   end interface specgrid_t
   
   interface photgrid_t
      module procedure photgrid_t_
      module procedure photgrid_t_specgrid_
   end interface photgrid_t

   ! Access specifiers

   private

   public :: LABEL_LEN
   public :: STAT_OK
   public :: axis_t
   public :: limb_t
   public :: ngrid_t
   public :: passband_t
   public :: photgrid_t
   public :: photint_t
   public :: specgrid_t
   public :: specint_t
   public :: read
   public :: write

contains

   #:for type in ('specgrid_t', 'photgrid_t')

      function ${type}$_(filename) result(gr)

         character(*), intent(in) :: filename
         type(${type}$)           :: gr

         type(hdf5io_t) :: hi

         ! Create the ${type}$ from file

         call open_file_(filename, hi)
         call read(hi, gr)
         call hi%final()

         ! Finish

         return

      end function ${type}$_

   #:endfor

   !****
      
   function photgrid_t_specgrid_(specgrid_filename, passband_filename) result(pg)

      character(*), intent(in) :: specgrid_filename
      character(*), intent(in) :: passband_filename
      type(photgrid_t)         :: pg

      type(passband_t) :: pb
      type(hdf5io_t)   :: hi

      ! Create the photgrid_t from files

      call open_file_(passband_filename, hi)
      call read(hi, pb)
      call hi%final()

      call open_file_(specgrid_filename, hi)
      call read(hi, pb, pg)
      call hi%final()

      ! Finish

      return

   end function photgrid_t_specgrid_
         
   !****

   subroutine open_file_(filename, hi)

      character(*), intent(in)    :: filename
      type(hdf5io_t), intent(out) :: hi

      integer                   :: status
      character(:), allocatable :: msg_dir
      character(:), allocatable :: filename_dir

      ! Open the file

      if (is_hdf5(filename)) then

         hi = hdf5io_t(filename, OPEN_FILE_RO)
         return

      else

         call GET_ENV('MSG_DIR', msg_dir, status)

         if (status == 0) then

            filename_dir = msg_dir//'/data/'//filename

            if (is_hdf5(filename_dir)) then

               hi = hdf5io_t(filename_dir, OPEN_FILE_RO)
               return

            endif

         endif

      endif

      @:ABORT('file not found')

   end subroutine open_file_

end module msg_m

